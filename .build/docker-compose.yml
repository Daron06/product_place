version: '3.8'

services:
  app:
    build: ../
    image: unknown:latest
    environment:
      NODE_ENV: production
      API_URL: https://${DOMAIN}/api
      API_NODE_URL: http://api_app
      CHECKOUT_PK: ${CHECKOUT_PK}
      NEXT_PUBLIC_CHECKOUT_PK: ${CHECKOUT_PK}
      PORT: 80
    command: ['sh', '-c', 'yarn start -p $${PORT}']
    networks:
      - public
    deploy:
      labels:
        - 'traefik.enable=true'

        - 'traefik.http.routers.api-frontend-${NAMESPACE}.entrypoints=http,https'
        - 'traefik.http.routers.api-frontend-${NAMESPACE}.rule=Host(`${DOMAIN}`) && !Path(`/api/rebuild-localazy`) && PathPrefix(`/api`)'
        - 'traefik.http.routers.api-frontend-${NAMESPACE}.middlewares=api-stripprefix'
        - 'traefik.http.routers.api-frontend-${NAMESPACE}.service=unknown-api@docker'
        - 'traefik.http.routers.api-frontend-${NAMESPACE}.tls.certresolver=le'

        - 'traefik.http.middlewares.api-stripprefix.stripprefix.prefixes=/api'

        - 'traefik.http.middlewares.www-redirect-${NAMESPACE}.redirectregex.regex=^https?://(?:www.)?${DOMAIN}/(.*)'
        - 'traefik.http.middlewares.www-redirect-${NAMESPACE}.redirectregex.replacement=https://${DOMAIN}/$${1}'

        - 'traefik.http.routers.frontend-${NAMESPACE}-www.entrypoints=https'
        - 'traefik.http.routers.frontend-${NAMESPACE}-www.middlewares=www-redirect-${NAMESPACE}'
        - 'traefik.http.routers.frontend-${NAMESPACE}-www.rule=Host(`www.${DOMAIN}`)'
        - 'traefik.http.routers.frontend-${NAMESPACE}-www.tls.certresolver=le'

        - 'traefik.http.routers.frontend-${NAMESPACE}.entrypoints=http,https'
        - 'traefik.http.routers.frontend-${NAMESPACE}.rule=Host(`${DOMAIN}`)'
        - 'traefik.http.routers.frontend-${NAMESPACE}.tls.certresolver=le'

        - 'traefik.http.services.frontend-${NAMESPACE}.loadbalancer.server.port=80'

networks:
  public:
    external: true
    name: public
